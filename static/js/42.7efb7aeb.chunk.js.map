{"version":3,"file":"static/js/42.7efb7aeb.chunk.js","mappings":"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","sources":["redux/selectors.js","components/Section/Section.styled.js","components/Section/Section.js","components/Form/Form.styled.js","components/Form/Form.js","components/ContactsInfo/ContactsInfo.styled.js","components/ContactsInfo/ContactsInfo.js","components/ContactsList/ContactsList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts/Contacts.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;","import styled from 'styled-components';\n\nexport const FeedbackTitle = styled.h2`\n    margin: 30px 30px 15px 30px;\n`;","import { FeedbackTitle } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n    return (\n        <section>\n            <FeedbackTitle>{title}</FeedbackTitle>\n            {children}\n        </section>\n    );\n};","import styled from 'styled-components';\n\nexport const FormData = styled.form`\n    width: 300px;\n    margin: 15px 30px 30px 30px;\n    padding: 10px;\n    border: 1px solid #5f6a71;\n\n`;\n\nexport const FormLabel = styled.label`\n    display: block;\n`;\n\nexport const FormLabelName = styled.p`\n    margin-bottom: 15px;\n`;\n\nexport const FormInputName = styled.input`\n    margin-bottom: 30px;\n`;","import { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContacts } from '../../redux/operations';\nimport { getContacts } from '../../redux/selectors';\n\nimport { FormData, FormLabel, FormLabelName, FormInputName } from './Form.styled';\nimport shortid from 'shortid';\n\nexport default function Form() {\n    // === Получаем ссылку на функцию отправки экшенов\n    const dispatch = useDispatch();\n\n    // === ХУКи состояния нового контакта\n    const [id, setId] = useState(0);\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    \n    // // === Объект состояния нового контакта\n    const state = {\n        id,\n        name,\n        number,\n    };\n\n    // === Обновление state при вводе в <input>\n    const handleChange = event => {\n        const { name, value } = event.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default: return;\n        };\n        // Генерация id контакта\n        setId(shortid.generate()); \n    };\n\n    // === Забираем из store контакты\n    const items = useSelector(getContacts);\n    \n    // === Экшен добавления нового контакта\n    const handleSubmit = event => {\n        event.preventDefault();\n        // Проверка наличия контакта\n        if (items.find(option => option.name.toLowerCase() === state.name.toLowerCase())) {\n            // Если контакт уже есть - выводим предупреждение\n            return alert(`${state.name} is already in contacts.`);\n        } else {\n            // Если контакта нет - отправляем контакт на бекэнд\n            dispatch(addContacts(state));\n        };\n        reset();\n    };\n\n    // === Очистка формы\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n            \n        return (\n            <div>\n                <FormData onSubmit={handleSubmit}>\n                    <FormLabel>\n                        <FormLabelName>Name</FormLabelName>\n                        <FormInputName\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                            required\n                            value={name} onChange={handleChange}\n                        />\n                        <FormLabelName>Number</FormLabelName>\n                        <FormInputName\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                            required\n                            value={number} onChange={handleChange}\n                            />\n                    </FormLabel>\n                    <button type=\"submit\">Add contact</button>\n                </FormData>\n            </div>\n        )\n};","import styled from 'styled-components';\n\nexport const ContactListItem = styled.li`\n    margin: 5px 10px 5px 60px;\n`;\n\nexport const ButtonDelete = styled.button`\n    margin-left: 20px;\n    font-size: 12px;\n`;","import { useDispatch } from \"react-redux\";\nimport { deleteContacts } from \"../../redux/operations\";\nimport { ContactListItem, ButtonDelete } from './ContactsInfo.styled';\n\n\nexport const ContactsInfo = ({ contact }) => {\n    // === Получаем ссылку на функцию отправки экшенов\n    const dispatch = useDispatch();\n\n    // ==== Экшен удаления контакта\n    const handleDelete = () => dispatch(deleteContacts(contact.id));\n\n    return (\n            <ContactListItem key={contact.id}>{contact.name}: {contact.number}\n                <ButtonDelete onClick={handleDelete}>Delete</ButtonDelete>\n            </ContactListItem>\n    )\n}","import { ContactsInfo } from '../ContactsInfo';\nimport { useSelector } from \"react-redux\";\nimport { getContacts, getFilter } from '../../redux/selectors';\n\nexport const ContactsList = () => {\n    // === Забираем из store данные фильтра\n    const filter = useSelector(getFilter);\n\n    // === Забираем из store контакты\n    const items = useSelector(getContacts);\n\n    return (\n        <div>\n            <ul>\n                {/* Если у контакта есть информация из фильтра - отображаем контакт */}\n                {items.map(contact => {return contact.name.toLowerCase().includes(filter) &&\n                    <ContactsInfo\n                        key={contact.id}\n                        contact={contact}\n                    />}\n                )}              \n            </ul>\n        </div>\n    )\n};","import styled from 'styled-components';\n\nexport const FilterTitle = styled.p`\n    margin-left: 30px;\n    margin-bottom: 5px;\n`;\n\nexport const FilterInput = styled.input`\n    margin-left: 30px;\n    margin-bottom: 15px;\n`;","import { useDispatch } from \"react-redux\";\nimport { filterContact } from \"../../redux/filterSlice\";\nimport { FilterTitle, FilterInput } from './Filter.styled';\n\nexport const Filter = ({value}) => {\n    // === Получаем ссылку на функцию отправки экшенов\n    const dispatch = useDispatch();\n\n    // === Экшен фильтрации контактов\n    const handleFilter = (event) => {\n        // Нормализация данных из поля фильтрации\n        const normalizedValue = event.target.value.toLowerCase();\n        // Отправка экшена фильтрации\n        dispatch(filterContact(normalizedValue))\n    };\n\n    return (\n        <div>\n            <FilterTitle>Find contacts by name</FilterTitle>\n            <FilterInput type=\"text\" name=\"filter\" value={value} onChange={handleFilter}></FilterInput>\n        </div>\n    )\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from '../../redux/operations';\n\nimport { getError, getIsLoading } from \"../../redux/selectors\";\nimport { Section } from '../../components/Section';\nimport  Form  from '../../components/Form';\nimport { ContactsList } from '../../components/ContactsList';\nimport { Filter } from '../../components/Filter';\nimport { Loader } from \"../../components/Loader\"; \n\nexport default function Contacts() {\n    \n    const dispatch = useDispatch();\n    const isLoading = useSelector(getIsLoading);\n    const error = useSelector(getError);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <div>\n            <Helmet>\n                <title>Your contacts</title>\n            </Helmet>\n            <Section title=\"Phonebook\">\n                <Form />\n            </Section>\n\n            <Section title=\"Contacts\">\n                <Filter />\n                <ContactsList />\n                {/* Показывать загрузчик пока не получен ответ бекэнда */}\n                {isLoading && !error && <Loader />}\n            </Section>\n        </div>\n    );\n}","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","FeedbackTitle","styled","_templateObject","_taggedTemplateLiteral","Section","_ref","title","children","_jsxs","_jsx","FormData","FormLabel","_templateObject2","FormLabelName","_templateObject3","FormInputName","_templateObject4","Form","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","id","setId","_useState3","_useState4","name","setName","_useState5","_useState6","number","setNumber","handleChange","event","_event$currentTarget","currentTarget","value","shortid","useSelector","reset","onSubmit","preventDefault","find","option","toLowerCase","alert","concat","addContacts","type","pattern","required","onChange","ContactListItem","ButtonDelete","ContactsInfo","contact","onClick","deleteContacts","ContactsList","map","includes","FilterTitle","FilterInput","Filter","normalizedValue","target","filterContact","Contacts","useEffect","fetchContacts","Helmet","Loader","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","setCharacters","_alphabet_","length","Error","unique","split","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","_seed_","mask","log","LN2","step"],"sourceRoot":""}